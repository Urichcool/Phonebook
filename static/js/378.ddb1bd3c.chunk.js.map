{"version":3,"file":"static/js/378.ddb1bd3c.chunk.js","mappings":"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","sources":["components/Contacts/Contacts.styled.jsx","components/Contacts/AppAddContactsForm.jsx","components/Contacts/AppContactsFilterInput.jsx","components/Contacts/AppContactsItem.jsx","components/Contacts/AppContactsList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ContactsApp = styled.div`\n  padding: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ContactsText = styled.p`\n  text-align: center;\n  margin: 0;\n  font-size: 25px;\n  font-weight: 500;\n`;\n\nexport const ContactsAddForm = styled.form`\n  margin-bottom: 80px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const ContactsAddButton = styled.button`\n  font-size: 16px;\n  background-color: #d601d6;\n  color: white;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  border-radius: 4px;\n  &:hover,\n  &:focus {\n    color: orange;\n    transition: 500ms;\n  }\n`;\n\nexport const ContactsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style-position: inside;\n  width: 250px;\n\n  @media (min-width: 468px) {\n    width: 400px;\n  }\n\n  @media (min-width: 768px) {\n    width: 500px;\n  }\n`;\n\nexport const ContactsListItem = styled.li`\n  padding: 10px;\n  border-radius: 4px;\n  background-color: #1dd2ff;\n  margin-bottom: 20px;\n  &:last-child {\n    margin-bottom: 0;\n  }\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ContactsListText = styled.p`\n  font-size: 20px;\n  color: white;\n  margin: 0;\n  display: flex;\n  align-items: center;\n  svg {\n    margin-right: 5px;\n  }\n`;\n\nexport const ContactsListLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-weight: 500;\n  margin-bottom: 10px;\n`;\n\nexport const ContactsAddInput = styled.input`\n  width: 250px;\n\n  @media (min-width: 468px) {\n    width: 400px;\n  }\n\n  @media (min-width: 768px) {\n    width: 500px;\n  }\n  height: 25px;\n  outline: none;\n  border-radius: 2px;\n  border: 1px solid gray;\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: orange;\n    transition: 500ms;\n  }\n`;\n\nexport const ContactsFilterInput = styled.input`\n  width: 250px;\n\n  @media (min-width: 468px) {\n    width: 400px;\n  }\n\n  @media (min-width: 768px) {\n    width: 500px;\n  }\n  height: 25px;\n  outline: none;\n  border-radius: 2px;\n  border: 1px solid gray;\n  &:hover,\n  &:focus,\n  &:active {\n    border-color: orange;\n    transition: 500ms;\n  }\n`;\n\nexport const ContactsDeleteButton = styled.button`\n  background-color: white;\n  margin: 0;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 4px;\n  border: none;\n  &:hover,\n  &:focus {\n    color: red;\n    transition: 500ms;\n  }\n  svg {\n    width: 20px;\n    height: 20px;\n  }\n`;\n","import {\n  ContactsAddForm,\n  ContactsAddButton,\n  ContactsListLabel,\n  ContactsAddInput,\n} from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/contacts/contactsSlice';\nimport { addContact } from 'redux/contacts/operations';\nimport { IoMdContact } from 'react-icons/io';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\n\nexport const AppAddContactsForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    const name = e.currentTarget.elements[0].value;\n    const number = e.currentTarget.elements[1].value;\n\n    if (contacts.some(contact => contact.name === name)) {\n      window.alert(`${name} is already in contacts`);\n      e.currentTarget.reset();\n      return;\n    }\n    dispatch(\n      addContact({\n        name: name,\n        number: number,\n      })\n    );\n    e.currentTarget.reset();\n  };\n\n  return (\n    <ContactsAddForm autoComplete=\"off\" onSubmit={handleFormSubmit}>\n      <ContactsListLabel>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <IoMdContact /> Name\n        </div>\n\n        <ContactsAddInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </ContactsListLabel>\n      <ContactsListLabel>\n        <div style={{ display: 'flex', alignItems: 'center' }}>\n          <BsFillTelephoneFill /> Number\n        </div>\n        <ContactsAddInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </ContactsListLabel>\n      <ContactsAddButton type=\"submit\">Add contact</ContactsAddButton>\n    </ContactsAddForm>\n  );\n};\n","import { ContactsListLabel, ContactsFilterInput } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\n\nexport const AppContactsFilterInput = () => {\n  const dispatch = useDispatch();\n\n  const handleInputChange = e => {\n    dispatch(setFilter(e.currentTarget.value));\n  };\n\n  return (\n    <ContactsListLabel>\n      Find contacts by name\n      <ContactsFilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleInputChange}\n      ></ContactsFilterInput>\n    </ContactsListLabel>\n  );\n};\n","import {\n  ContactsListItem,\n  ContactsDeleteButton,\n  ContactsListText,\n} from './Contacts.styled';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { getIsLoading } from 'redux/contacts/contactsSlice';\nimport { IoMdContact } from 'react-icons/io';\nimport { BsFillTelephoneFill } from 'react-icons/bs';\nimport { AiOutlineClose } from 'react-icons/ai';\n\nconst AppContactsItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n\n  return (\n    <ContactsListItem>\n      <div>\n        <ContactsListText>\n          <IoMdContact />\n          {name}\n        </ContactsListText>\n        <ContactsListText>\n          <BsFillTelephoneFill />\n          {number}\n        </ContactsListText>\n      </div>\n      <ContactsDeleteButton\n        onClick={() => dispatch(deleteContact(id))}\n        disabled={isLoading}\n      >\n        <AiOutlineClose />\n      </ContactsDeleteButton>\n    </ContactsListItem>\n  );\n};\n\nexport default AppContactsItem;\n\nAppContactsItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import { ContactsList } from './Contacts.styled';\nimport AppContactsItem from './AppContactsItem';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/filterSlice';\nimport { getContacts } from 'redux/contacts/contactsSlice';\n\nexport const AppContactsList = () => {\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(getContacts);\n\n  return (\n    <ContactsList>\n      {contacts\n        .filter(contact =>\n          contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n        )\n        .map(({ name, id, number }) => (\n          <AppContactsItem name={name} key={id} number={number} id={id} />\n        ))}\n    </ContactsList>\n  );\n};\n","import { AppAddContactsForm } from '../components/Contacts/AppAddContactsForm';\nimport { AppContactsFilterInput } from 'components/Contacts/AppContactsFilterInput';\nimport { AppContactsList } from 'components/Contacts/AppContactsList';\nimport { ContactsApp } from 'components/Contacts/Contacts.styled';\nimport { AppLoader } from 'components/App.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { AppContainer } from 'components/App.styled';\nimport { getIsLoading, getContacts } from 'redux/contacts/contactsSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactsText } from 'components/Contacts/Contacts.styled';\nimport { Helmet } from 'react-helmet';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(getIsLoading);\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <AppContainer>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <ContactsApp>\n        <ContactsText>Add new contact</ContactsText>\n        <AppAddContactsForm />\n        {isLoading && (\n          <AppLoader>\n            <ThreeDots color=\"orange\" />\n          </AppLoader>\n        )}\n        {contacts.length !== 0 && (\n          <>\n            <AppContactsFilterInput />\n            <AppContactsList />\n          </>\n        )}\n      </ContactsApp>\n    </AppContainer>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["ContactsApp","styled","ContactsText","ContactsAddForm","ContactsAddButton","ContactsList","ContactsListItem","ContactsListText","ContactsListLabel","ContactsAddInput","ContactsFilterInput","ContactsDeleteButton","AppAddContactsForm","dispatch","useDispatch","contacts","useSelector","getContacts","autoComplete","onSubmit","e","preventDefault","name","currentTarget","elements","value","number","some","contact","window","alert","reset","addContact","style","display","alignItems","type","pattern","title","required","AppContactsFilterInput","onChange","setFilter","id","isLoading","getIsLoading","onClick","deleteContact","disabled","AppContactsList","filter","selectFilter","toLowerCase","includes","trim","map","useEffect","fetchContacts","Helmet","color","length"],"sourceRoot":""}